{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tmddu\\\\Desktop\\\\react_project\\\\front\\\\src\\\\components\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Test() {\n  _s();\n  const [id, setId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n  //db 데이터\n  const [entities, setEntities] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:4000/api/test\");\n      setEntities(response.data);\n    } catch (error) {\n      console.error(\"데이터 불러오기 에러:\", error);\n    }\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n    console.log(\"전송할 데이터:\", {\n      id,\n      name\n    });\n    try {\n      const response = await axios.post(\"http://localhost:4000/api/test\", {\n        id: id,\n        name: name\n      });\n      console.log(\"데이터 전달 성공: \", response.data);\n      fetchData();\n    } catch (error) {\n      console.error(\"데이터 전달 에러:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [\"\\uC544\\uC774\\uB514:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: id,\n        onChange: e => setId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), \"\\uC774\\uB984:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uC804\\uC1A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"TestEntity DB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: entities.map(entity => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uC544\\uC774\\uB514: \", entity.id, \" / \\uC774\\uB984: \", entity.name]\n        }, entity.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Test, \"BExl0XcDw+4bRXPMmBUw2eh+48Y=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Test","_s","id","setId","name","setName","entities","setEntities","fetchData","response","get","data","error","console","onSubmit","e","preventDefault","log","post","children","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","map","entity","_c","$RefreshReg$"],"sources":["C:/Users/tmddu/Desktop/react_project/front/src/components/Test.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction Test() {\r\n  const [id, setId] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n\r\n  //db 데이터\r\n  const [entities, setEntities] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:4000/api/test\");\r\n      setEntities(response.data);\r\n    } catch (error) {\r\n      console.error(\"데이터 불러오기 에러:\", error);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"전송할 데이터:\", { id, name });\r\n    try {\r\n      const response = await axios.post(\"http://localhost:4000/api/test\", {\r\n        id: id,\r\n        name: name,\r\n      });\r\n      console.log(\"데이터 전달 성공: \", response.data);\r\n      fetchData();\r\n    } catch (error) {\r\n      console.error(\"데이터 전달 에러:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        아이디:\r\n        <input\r\n          type=\"text\"\r\n          value={id}\r\n          onChange={(e) => setId(e.target.value)}\r\n        ></input>\r\n        이름:\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        ></input>\r\n        <button type=\"submit\">전송</button>\r\n      </form>\r\n\r\n      <div>\r\n        <h2>TestEntity DB</h2>\r\n        <ul>\r\n          {entities.map((entity) => (\r\n            <li key={entity.id}>\r\n              아이디: {entity.id} / 이름: {entity.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACda,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,gCAAgC,CAAC;MAClEH,WAAW,CAACE,QAAQ,CAACE,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC;EACF,CAAC;EAED,MAAME,QAAQ,GAAG,MAAOC,CAAC,IAAK;IAC5BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBH,OAAO,CAACI,GAAG,CAAC,UAAU,EAAE;MAAEf,EAAE;MAAEE;IAAK,CAAC,CAAC;IACrC,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMZ,KAAK,CAACqB,IAAI,CAAC,gCAAgC,EAAE;QAClEhB,EAAE,EAAEA,EAAE;QACNE,IAAI,EAAEA;MACR,CAAC,CAAC;MACFS,OAAO,CAACI,GAAG,CAAC,aAAa,EAAER,QAAQ,CAACE,IAAI,CAAC;MACzCH,SAAS,CAAC,CAAC;IACb,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;IACpC;EACF,CAAC;EAED,oBACEb,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAMe,QAAQ,EAAEA,QAAS;MAAAK,QAAA,GAAC,qBAExB,eAAApB,OAAA;QACEqB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEnB,EAAG;QACVoB,QAAQ,EAAGP,CAAC,IAAKZ,KAAK,CAACY,CAAC,CAACQ,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,iBAET,eAAA5B,OAAA;QACEqB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEjB,IAAK;QACZkB,QAAQ,EAAGP,CAAC,IAAKV,OAAO,CAACU,CAAC,CAACQ,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACT5B,OAAA;QAAQqB,IAAI,EAAC,QAAQ;QAAAD,QAAA,EAAC;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eAEP5B,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,EAAI;MAAa;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtB5B,OAAA;QAAAoB,QAAA,EACGb,QAAQ,CAACsB,GAAG,CAAEC,MAAM,iBACnB9B,OAAA;UAAAoB,QAAA,GAAoB,sBACb,EAACU,MAAM,CAAC3B,EAAE,EAAC,mBAAO,EAAC2B,MAAM,CAACzB,IAAI;QAAA,GAD5ByB,MAAM,CAAC3B,EAAE;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEd,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC1B,EAAA,CAjEQD,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAmEb,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}